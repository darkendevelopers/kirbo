@font-face {
    font-family: 'roboto-light'; /*a name to be used later*/
    src: url('fonts/Roboto-Light.ttf'); /*URL to font*/
}
*,
*::after,
*::before {
  box-sizing: border-box;
}
.code {
  text-align: center;
  font-size: 100px;
}
.player {
  margin: auto;
  width: 100%;
  position: fixed;
  font-size: 70px;
}
:root {
  --cell-size: 50px;
  --mark-size: calc(var(--cell-size) * 0.9);
}

body {
  font-family: roboto-light;
  overflow: hidden;
  zoom: 0.38;
  zoom: 38%;
  margin: 0;
}

.board {
  border: 5px solid white;
  position: absolute;
  top: 55%;
  right: 50%;
  transform: translate(50%, -50%);
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
}
.section {
  border: 7px solid black;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);

}
.section.wait,
.section.x.wait,
.section.o.wait,
.section.t,
.section.t.wait {
  cursor: not-allowed;
}
.section.x::after {
  transform: rotate(-45deg);
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * 0.6);
  height: calc(var(--mark-size) * 15);
  background-color: black;
}
.section.x::before {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * 0.6);
  height: calc(var(--mark-size) * 15);
  background-color: black;
  transform: rotate(45deg);
}
.section.o::before {
  width: calc(var(--mark-size) * 11);
  height: calc(var(--mark-size) * 11);
  content: '';
  position: absolute;
  border-radius: 50%;
  border: 36px solid black;
}
.sec {
  border: 5.5px solid black;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
}
.sec.wait,
.sec.x.wait,
.sec.o.wait,
.sec.t,
.sec.t.wait {
  cursor: not-allowed;
}
.sec.x::after {
  transform: rotate(-45deg);
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * 0.3);
  height: calc(var(--mark-size) * 4.7);
  background-color: black;
}
.sec.x::before {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * 0.3);
  height: calc(var(--mark-size) * 4.7);
  background-color: black;
  transform: rotate(45deg);
}
.sec.o::before {
  width: calc(var(--mark-size) * 3.5);
  height: calc(var(--mark-size) * 3.5);
  content: '';
  position: absolute;
  border-radius: 50%;
  border: 18px solid black;
}
.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}
.cell.wait,
.cell.x.wait,
.cell.o.wait {
  cursor: not-allowed;
}
.cell.x,
.cell.o {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.o::before {
  background-color: black;
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after,
.board.o .cell:not(.x):not(.o):hover::before {
  background-color: lightgrey;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
  transform: rotate(-45deg);
}

.cell.o::before,
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
  content: '';
  position: absolute;
  border-radius: 50%;
}

.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: white;
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 20rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 6rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}